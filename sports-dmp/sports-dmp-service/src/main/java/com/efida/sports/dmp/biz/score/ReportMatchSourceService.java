package com.efida.sports.dmp.biz.score;

import java.util.List;
import java.util.Map;

import com.efida.sport.admin.facade.model.SpMatchModel;
import com.efida.sports.dmp.dao.entity.ReportMatchSourceEntity;

import cn.evake.auth.usermodel.PagingResult;

/**
 * 赛事报名统计
 * 
 * @author zengbo
 * @version $Id: ReportMatchSourceService.java, v 0.1 2018年8月30日 上午9:42:56 zengbo Exp $
 */
public interface ReportMatchSourceService {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    int insert(ReportMatchSourceEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    int insertSelective(ReportMatchSourceEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    ReportMatchSourceEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ReportMatchSourceEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_match_source
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(ReportMatchSourceEntity record);

    /**
     * 保存多个赛事统计数据
     * 
     * @param records
     */
    void saveReportMatchSourceList(List<ReportMatchSourceEntity> records);

    /**
     * 分页查询
     * 
     * @param likeParams
     * @param inParams
     * @param pageNumber
     * @param pageSize
     * @return
     */
    public PagingResult<ReportMatchSourceEntity> getPageSourceEntity(String likeParams,
                                                                     String inParams,
                                                                     int pageNumber, int pageSize);

    /**
     * 导出查询
     * 
     * @param likeParams
     * @param inParams
     * @return
     */
    public List<ReportMatchSourceEntity> getPageSourceEntityByExport(String likeParams,
                                                                     String inParams);

    /**
     * 查询官方报名人数（图形）
     * 
     * @param map
     * @return
     */
    List<Map<String, Object>> officialEnrollCount(String likeParams, String inParams);

    /**
     * 官方报名人数分页查询
     * 
     * @param likeParams
     * @param inParams
     * @param pageNumber
     * @param pageSize
     * @return
     */
    PagingResult<ReportMatchSourceEntity> officialEnrollByParams(String likeParams, String inParams,
                                                                 int pageNumber, int pageSize);

    /**
     * 官方报名人数分页查询
     * 
     * @param likeParams
     * @param inParams
     * @param pageNumber
     * @param pageSize
     * @return
     */
    PagingResult<ReportMatchSourceEntity> officialEnrollByDetailParams(String likeParams,
                                                                       String inParams,
                                                                       int pageNumber,
                                                                       int pageSize);

    /**
     * 官方报名人数导出
     * 
     * @param likeParams
     * @param inParams
     * @param pageNumber
     * @param pageSize
     * @return
     */
    List<ReportMatchSourceEntity> officialEnrollByEceport(String likeParams, String inParams);

    /**
     * 查询赛事名称
     * 
     * @param map
     * @return
     */
    List<Map<String, Object>> queryMatchNameByParams(String matchName);

    /**
     * 查询赛事名称
     * 
     * @param map
     * @return
     */
    List<SpMatchModel> queryMatchName(String matchName);

    /**
     * 获取赛事top5数据
     * 
     * @param type　1 官方  2 承办方
     * @return
     */
    List<String> matchEnrollTop5(String type);

}
