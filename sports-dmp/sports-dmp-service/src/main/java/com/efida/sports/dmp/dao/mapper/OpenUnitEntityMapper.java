package com.efida.sports.dmp.dao.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.efida.sports.dmp.dao.entity.OpenUnitEntity;

public interface OpenUnitEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    int insert(OpenUnitEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    int insertSelective(OpenUnitEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    OpenUnitEntity selectByPrimaryKey(Long id);

    /**
     * 通过承办单位code查询 相关配置信息
     * 
     * @param unitCode
     * @return
     */
    OpenUnitEntity selectByUnitCode(String unitCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(OpenUnitEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table open_unit_account
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(OpenUnitEntity record);

    /**
     * 根据关键字查询合作账号
     * unitCode
     * unitName                                                       
     * email 
     * phone
     * lock
     * @title
     * @methodName
     * @author wangyi
     * @description
     * @param params
     * @return
     */
    List<OpenUnitEntity> selectByKeyWords(Map<String, Object> params);

    /**
     * 锁定/解锁用户
     * @title
     * @methodName
     * @author wangyi
     * @description
     * @param unitCode
     * @param lock
     */
    void lockUnitByCode(@Param(value = "unitCode") String unitCode,
                        @Param(value = "lock") int lock);

    /**
     * 根据关键字查询
     * @title
     * @methodName
     * @author wangyi
     * @description
     * @param keyword
     * @return 
     */
    List<OpenUnitEntity> selectByKeyWord(@Param(value = "keyword") String keyword);

    /**
     * 模糊查询承办方名称
     * 
     * @param unitName
     * @return
     */
    List<OpenUnitEntity> queryLikeUnitName(@Param(value = "unitName") String unitName,
                                           @Param(value = "unitCode") String unitCode);

}