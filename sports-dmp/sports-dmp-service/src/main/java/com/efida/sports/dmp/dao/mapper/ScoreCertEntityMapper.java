package com.efida.sports.dmp.dao.mapper;

import java.util.List;
import java.util.Map;

import com.efida.sports.dmp.dao.entity.ScoreCertEntity;

public interface ScoreCertEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    int insert(ScoreCertEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    int insertSelective(ScoreCertEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    ScoreCertEntity selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ScoreCertEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table score_cert
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(ScoreCertEntity record);

    /**
    /**
     *  String unitCode
     *  String idempotentId
     *  
     * @return
     */
    ScoreCertEntity selectByIdempotentId(Map<String, Object> map);

    /**
     * 获取用户最新未查看的证书
     * 
     * @param registerCode
     * @return
     */
    ScoreCertEntity getRegisterNewestScoreCert(String registerCode);

    /**
     * 修改证书查看状态 （修改为已查看）
     * 
     * @param certCode
     */
    void updateViewScorePicStatus(String certCode);

    /**
     * 查询用户证书
     * 
     * @param registerCode
     * @return
     */
    List<ScoreCertEntity> getRegisterScoreCerts(String registerCode);

    /**
     * 查询证书
     *  queryParams.put("playerPhone", playerPhone);
        queryParams.put("certSn", certSn);
        queryParams.put("certName", certName);
        queryParams.put("isSmsSend", isSmsSend);
        queryParams.put("status", status);
     * @title
     * @methodName
     * @author wangyi
     * @description
     * @param queryParams
     * @return
     */
    List<ScoreCertEntity> selectCertEntityLikeParams(Map<String, Object> queryParams);
}