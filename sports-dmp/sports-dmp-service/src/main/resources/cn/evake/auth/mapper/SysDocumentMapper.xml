<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.evake.auth.dao.mapper.SysDocumentMapper" >
  <resultMap id="BaseResultMap" type="cn.evake.auth.dao.model.SysDocument" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
    <result column="last_uid" property="lastUid" jdbcType="INTEGER" />
    <result column="last_uname" property="lastUname" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.evake.auth.dao.model.SysDocument" extends="BaseResultMap" >
    <result column="intro" property="intro" jdbcType="LONGVARCHAR" />
    <result column="attachment" property="attachment" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, version, publish_time, is_enable, last_uid, last_uname, gmt_create, 
    gmt_modified
  </sql>
  <sql id="Blob_Column_List" >
    intro, attachment
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.evake.auth.dao.model.SysDocumentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.evake.auth.dao.model.SysDocumentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_document
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_document
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.evake.auth.dao.model.SysDocumentExample" >
    delete from sys_document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.evake.auth.dao.model.SysDocument" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_document (type, name, version, 
      publish_time, is_enable, last_uid, 
      last_uname, gmt_create, gmt_modified, 
      intro, attachment)
    values (#{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{isEnable,jdbcType=BIT}, #{lastUid,jdbcType=INTEGER}, 
      #{lastUname,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{intro,jdbcType=LONGVARCHAR}, #{attachment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.evake.auth.dao.model.SysDocument" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_document
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="lastUid != null" >
        last_uid,
      </if>
      <if test="lastUname != null" >
        last_uname,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="lastUid != null" >
        #{lastUid,jdbcType=INTEGER},
      </if>
      <if test="lastUname != null" >
        #{lastUname,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.evake.auth.dao.model.SysDocumentExample" resultType="java.lang.Integer" >
    select count(*) from sys_document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_document
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
      <if test="record.lastUid != null" >
        last_uid = #{record.lastUid,jdbcType=INTEGER},
      </if>
      <if test="record.lastUname != null" >
        last_uname = #{record.lastUname,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intro != null" >
        intro = #{record.intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachment != null" >
        attachment = #{record.attachment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sys_document
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      is_enable = #{record.isEnable,jdbcType=BIT},
      last_uid = #{record.lastUid,jdbcType=INTEGER},
      last_uname = #{record.lastUname,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      intro = #{record.intro,jdbcType=LONGVARCHAR},
      attachment = #{record.attachment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_document
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      is_enable = #{record.isEnable,jdbcType=BIT},
      last_uid = #{record.lastUid,jdbcType=INTEGER},
      last_uname = #{record.lastUname,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.evake.auth.dao.model.SysDocument" >
    update sys_document
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="lastUid != null" >
        last_uid = #{lastUid,jdbcType=INTEGER},
      </if>
      <if test="lastUname != null" >
        last_uname = #{lastUname,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.evake.auth.dao.model.SysDocument" >
    update sys_document
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      is_enable = #{isEnable,jdbcType=BIT},
      last_uid = #{lastUid,jdbcType=INTEGER},
      last_uname = #{lastUname,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=LONGVARCHAR},
      attachment = #{attachment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.evake.auth.dao.model.SysDocument" >
    update sys_document
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      is_enable = #{isEnable,jdbcType=BIT},
      last_uid = #{lastUid,jdbcType=INTEGER},
      last_uname = #{lastUname,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>