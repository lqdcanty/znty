<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.efida.sports.dmp.dao.mapper.OpenScoreEntityMapper">
	<resultMap id="BaseResultMap"
		type="com.efida.sports.dmp.dao.entity.OpenScoreEntity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="id" jdbcType="BIGINT" property="id" />
		<result column="batch_number" jdbcType="VARCHAR"
			property="batchNumber" />
		<result column="score_code" jdbcType="VARCHAR"
			property="scoreCode" />
		<result column="unit_code" jdbcType="VARCHAR"
			property="unitCode" />
		<result column="player_code" jdbcType="VARCHAR"
			property="playerCode" />
		<result column="player_name" jdbcType="VARCHAR"
			property="playerName" />
		<result column="player_phone" jdbcType="VARCHAR"
			property="playerPhone" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="open_plat_type" jdbcType="VARCHAR"
			property="openPlatType" />
		<result column="open_id" jdbcType="VARCHAR" property="openId" />
		<result column="game_code" jdbcType="VARCHAR"
			property="gameCode" />
		<result column="game_name" jdbcType="VARCHAR"
			property="gameName" />
		<result column="match_code" jdbcType="VARCHAR"
			property="matchCode" />
		<result column="match_name" jdbcType="VARCHAR"
			property="matchName" />
		<result column="field_code" jdbcType="VARCHAR"
			property="fieldCode" />
		<result column="field_name" jdbcType="VARCHAR"
			property="fieldName" />
		<result column="match_group_code" jdbcType="VARCHAR"
			property="matchGroupCode" />
		<result column="match_group_name" jdbcType="VARCHAR"
			property="matchGroupName" />
		<result column="event_code" jdbcType="VARCHAR"
			property="eventCode" />
		<result column="event_name" jdbcType="VARCHAR"
			property="eventName" />
		<result column="part_time" jdbcType="TIMESTAMP"
			property="partTime" />
		<result column="score_name" jdbcType="VARCHAR"
			property="scoreName" />
		<result column="score" jdbcType="DECIMAL" property="score" />
		<result column="score_unit" jdbcType="VARCHAR"
			property="scoreUnit" />
		<result column="score_desc" jdbcType="VARCHAR"
			property="scoreDesc" />
		<result column="is_valid" jdbcType="TINYINT" property="isValid" />
		<result column="score_type" jdbcType="VARCHAR"
			property="scoreType" />
		<result column="score_prop" jdbcType="VARCHAR"
			property="scoreProp" />
		<result column="player_prop" jdbcType="VARCHAR"
			property="playerProp" />
		<result column="channel_code" jdbcType="VARCHAR"
			property="channelCode" />
		<result column="idempotent_id" jdbcType="VARCHAR"
			property="idempotentId" />
		<result column="source" jdbcType="TINYINT" property="source" />
		<result column="sync" jdbcType="TINYINT" property="sync" />
		<result column="sync_total" jdbcType="INTEGER"
			property="syncTotal" />
		<result column="sync_status" jdbcType="VARCHAR"
			property="syncStatus" />
		<result column="next_sync_time" jdbcType="TIMESTAMP"
			property="nextSyncTime" />
		<result column="gmt_create" jdbcType="TIMESTAMP"
			property="gmtCreate" />
		<result column="gmt_modified" jdbcType="TIMESTAMP"
			property="gmtModified" />
		<result column="enroll_source" jdbcType="INTEGER"
			property="enrollSource" />
	</resultMap>
	<sql id="Base_Column_List">
		id,batch_number, score_code, unit_code,
		player_code,
		player_name, player_phone,
		sex, open_plat_type, open_id,
		game_code,
		game_name, match_code,
		match_name, field_code, field_name,
		match_group_code, match_group_name, event_code,
		event_name, part_time,
		score_name,
		score, score_unit, score_desc,
		is_valid, score_type,
		score_prop,
		player_prop, channel_code, idempotent_id, source, sync,
		sync_total, sync_status, next_sync_time,
		gmt_create,
		gmt_modified,enroll_source
	</sql>

	<insert id="insert"
		parameterType="com.efida.sports.dmp.dao.entity.OpenScoreEntity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into open_score (id,batch_number, score_code, unit_code,
		player_code, player_name, player_phone,
		sex, open_plat_type, open_id,
		game_code, game_name, match_code,
		match_name, field_code, field_name,
		match_group_code, match_group_name, event_code,
		event_name, part_time,
		score_name,
		score, score_unit, score_desc,
		is_valid, score_type,
		score_prop,
		player_prop, channel_code, idempotent_id, source, sync,
		sync_total, sync_status, next_sync_time,enroll_source,
		gmt_create,
		gmt_modified)
		values
		(#{id,jdbcType=BIGINT},#{batchNumber,jdbcType=VARCHAR},
		#{scoreCode,jdbcType=VARCHAR},
		#{unitCode,jdbcType=VARCHAR},
		#{playerCode,jdbcType=VARCHAR}, #{playerName,jdbcType=VARCHAR},
		#{playerPhone,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{openPlatType,jdbcType=VARCHAR},
		#{openId,jdbcType=VARCHAR},
		#{gameCode,jdbcType=VARCHAR}, #{gameName,jdbcType=VARCHAR},
		#{matchCode,jdbcType=VARCHAR},
		#{matchName,jdbcType=VARCHAR},
		#{fieldCode,jdbcType=VARCHAR},
		#{fieldName,jdbcType=VARCHAR},
		#{matchGroupCode,jdbcType=VARCHAR},
		#{matchGroupName,jdbcType=VARCHAR}, #{eventCode,jdbcType=VARCHAR},
		#{eventName,jdbcType=VARCHAR}, #{partTime,jdbcType=TIMESTAMP},
		#{scoreName,jdbcType=VARCHAR},
		#{score,jdbcType=DECIMAL},
		#{scoreUnit,jdbcType=VARCHAR}, #{scoreDesc,jdbcType=VARCHAR},
		#{isValid,jdbcType=TINYINT}, #{scoreType,jdbcType=VARCHAR},
		#{scoreProp,jdbcType=VARCHAR},
		#{playerProp,jdbcType=VARCHAR},
		#{channelCode,jdbcType=VARCHAR}, #{idempotentId,jdbcType=VARCHAR},
		#{source,jdbcType=TINYINT},#{sync,jdbcType=TINYINT},
		#{syncTotal,jdbcType=INTEGER}, #{syncStatus,jdbcType=VARCHAR},
		#{nextSyncTime,jdbcType=TIMESTAMP},#{enrollSource,jdbcType=INTEGER},
		now(), now())
	</insert>
	<insert id="insertSelective"
		parameterType="com.efida.sports.dmp.dao.entity.OpenScoreEntity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into open_score
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="scoreCode != null">
				score_code,
			</if>
			<if test="batchNumber != null">
				batch_number,
			</if>
			<if test="unitCode != null">
				unit_code,
			</if>
			<if test="playerCode != null">
				player_code,
			</if>
			<if test="playerName != null">
				player_name,
			</if>
			<if test="playerPhone != null">
				player_phone,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="openPlatType != null">
				open_plat_type,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="gameCode != null">
				game_code,
			</if>
			<if test="gameName != null">
				game_name,
			</if>
			<if test="matchCode != null">
				match_code,
			</if>
			<if test="matchName != null">
				match_name,
			</if>
			<if test="fieldCode != null">
				field_code,
			</if>
			<if test="fieldName != null">
				field_name,
			</if>
			<if test="matchGroupCode != null">
				match_group_code,
			</if>
			<if test="matchGroupName != null">
				match_group_name,
			</if>
			<if test="eventCode != null">
				event_code,
			</if>
			<if test="eventName != null">
				event_name,
			</if>
			<if test="partTime != null">
				part_time,
			</if>
			<if test="scoreName != null">
				score_name,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="scoreUnit != null">
				score_unit,
			</if>
			<if test="scoreDesc != null">
				score_desc,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
			<if test="scoreType != null">
				score_type,
			</if>
			<if test="scoreProp != null">
				score_prop,
			</if>
			<if test="playerProp != null">
				player_prop,
			</if>
			<if test="channelCode != null">
				channel_code,
			</if>
			<if test="idempotentId != null">
				idempotent_id,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="sync != null">
				sync,
			</if>
			<if test="syncTotal != null">
				sync_total,
			</if>
			<if test="syncStatus != null">
				sync_status,
			</if>
			<if test="nextSyncTime != null">
				next_sync_time,
			</if>
			<if test="enrollSource != null">
				enroll_source,
			</if>
			gmt_create,
			gmt_modified,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="scoreCode != null">
				#{scoreCode,jdbcType=VARCHAR},
			</if>
			<if test="batchNumber != null">
				#{batchNumber,jdbcType=VARCHAR},
			</if>
			<if test="unitCode != null">
				#{unitCode,jdbcType=VARCHAR},
			</if>
			<if test="playerCode != null">
				#{playerCode,jdbcType=VARCHAR},
			</if>
			<if test="playerName != null">
				#{playerName,jdbcType=VARCHAR},
			</if>
			<if test="playerPhone != null">
				#{playerPhone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="openPlatType != null">
				#{openPlatType,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="gameCode != null">
				#{gameCode,jdbcType=VARCHAR},
			</if>
			<if test="gameName != null">
				#{gameName,jdbcType=VARCHAR},
			</if>
			<if test="matchCode != null">
				#{matchCode,jdbcType=VARCHAR},
			</if>
			<if test="matchName != null">
				#{matchName,jdbcType=VARCHAR},
			</if>
			<if test="fieldCode != null">
				#{fieldCode,jdbcType=VARCHAR},
			</if>
			<if test="fieldName != null">
				#{fieldName,jdbcType=VARCHAR},
			</if>
			<if test="matchGroupCode != null">
				#{matchGroupCode,jdbcType=VARCHAR},
			</if>
			<if test="matchGroupName != null">
				#{matchGroupName,jdbcType=VARCHAR},
			</if>
			<if test="eventCode != null">
				#{eventCode,jdbcType=VARCHAR},
			</if>
			<if test="eventName != null">
				#{eventName,jdbcType=VARCHAR},
			</if>
			<if test="partTime != null">
				#{partTime,jdbcType=TIMESTAMP},
			</if>
			<if test="scoreName != null">
				#{scoreName,jdbcType=VARCHAR},
			</if>
			<if test="score != null">
				#{score,jdbcType=DECIMAL},
			</if>
			<if test="scoreUnit != null">
				#{scoreUnit,jdbcType=VARCHAR},
			</if>
			<if test="scoreDesc != null">
				#{scoreDesc,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=TINYINT},
			</if>
			<if test="scoreType != null">
				#{scoreType,jdbcType=VARCHAR},
			</if>
			<if test="scoreProp != null">
				#{scoreProp,jdbcType=VARCHAR},
			</if>
			<if test="playerProp != null">
				#{playerProp,jdbcType=VARCHAR},
			</if>
			<if test="channelCode != null">
				#{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="idempotentId != null">
				#{idempotentId,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				#{source,jdbcType=TINYINT},
			</if>
			<if test="sync != null">
				#{sync,jdbcType=TINYINT},
			</if>
			<if test="syncTotal != null">
				#{syncTotal,jdbcType=INTEGER},
			</if>
			<if test="syncStatus != null">
				#{syncStatus,jdbcType=VARCHAR},
			</if>
			<if test="nextSyncTime != null">
				#{nextSyncTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enrollSource != null">
				#{enrollSource,jdbcType=INTEGER},
			</if>
			now(),
			now()
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective"
		parameterType="com.efida.sports.dmp.dao.entity.OpenScoreEntity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update open_score
		<set>
			<if test="batchNumber != null">
				batch_number = #{batchNumber,jdbcType=VARCHAR},
			</if>
			<if test="scoreCode != null">
				score_code = #{scoreCode,jdbcType=VARCHAR},
			</if>
			<if test="unitCode != null">
				unit_code = #{unitCode,jdbcType=VARCHAR},
			</if>
			<if test="playerCode != null">
				player_code = #{playerCode,jdbcType=VARCHAR},
			</if>
			<if test="playerName != null">
				player_name = #{playerName,jdbcType=VARCHAR},
			</if>
			<if test="playerPhone != null">
				player_phone = #{playerPhone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="openPlatType != null">
				open_plat_type = #{openPlatType,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="gameCode != null">
				game_code = #{gameCode,jdbcType=VARCHAR},
			</if>
			<if test="gameName != null">
				game_name = #{gameName,jdbcType=VARCHAR},
			</if>
			<if test="matchCode != null">
				match_code = #{matchCode,jdbcType=VARCHAR},
			</if>
			<if test="matchName != null">
				match_name = #{matchName,jdbcType=VARCHAR},
			</if>
			<if test="fieldCode != null">
				field_code = #{fieldCode,jdbcType=VARCHAR},
			</if>
			<if test="fieldName != null">
				field_name = #{fieldName,jdbcType=VARCHAR},
			</if>
			<if test="matchGroupCode != null">
				match_group_code = #{matchGroupCode,jdbcType=VARCHAR},
			</if>
			<if test="matchGroupName != null">
				match_group_name = #{matchGroupName,jdbcType=VARCHAR},
			</if>
			<if test="eventCode != null">
				event_code = #{eventCode,jdbcType=VARCHAR},
			</if>
			<if test="eventName != null">
				event_name = #{eventName,jdbcType=VARCHAR},
			</if>
			<if test="partTime != null">
				part_time = #{partTime,jdbcType=TIMESTAMP},
			</if>
			<if test="scoreName != null">
				score_name = #{scoreName,jdbcType=VARCHAR},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=DECIMAL},
			</if>
			<if test="scoreUnit != null">
				score_unit = #{scoreUnit,jdbcType=VARCHAR},
			</if>
			<if test="scoreDesc != null">
				score_desc = #{scoreDesc,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=TINYINT},
			</if>
			<if test="scoreType != null">
				score_type = #{scoreType,jdbcType=VARCHAR},
			</if>
			<if test="scoreProp != null">
				score_prop = #{scoreProp,jdbcType=VARCHAR},
			</if>
			<if test="playerProp != null">
				player_prop = #{playerProp,jdbcType=VARCHAR},
			</if>
			<if test="channelCode != null">
				channel_code = #{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="idempotentId != null">
				idempotent_id = #{idempotentId,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				source = #{source,jdbcType=TINYINT},
			</if>
			<if test="sync != null">
				sync = #{sync,jdbcType=TINYINT},
			</if>
			<if test="syncTotal != null">
				sync_total = #{syncTotal,jdbcType=INTEGER},
			</if>
			<if test="syncStatus != null">
				sync_status = #{syncStatus,jdbcType=VARCHAR},
			</if>
			<if test="nextSyncTime != null">
				next_sync_time = #{nextSyncTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enrollSource != null">
				enroll_source = #{enrollSource,jdbcType=INTEGER},
			</if>
			gmt_modified = now()
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.efida.sports.dmp.dao.entity.OpenScoreEntity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update open_score
		set batch_number = #{batchNumber,jdbcType=VARCHAR},
		score_code = #{scoreCode,jdbcType=VARCHAR},
		unit_code =
		#{unitCode,jdbcType=VARCHAR},
		player_code =
		#{playerCode,jdbcType=VARCHAR},
		player_name =
		#{playerName,jdbcType=VARCHAR},
		player_phone =
		#{playerPhone,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		open_plat_type = #{openPlatType,jdbcType=VARCHAR},
		open_id =
		#{openId,jdbcType=VARCHAR},
		game_code = #{gameCode,jdbcType=VARCHAR},
		game_name = #{gameName,jdbcType=VARCHAR},
		match_code =
		#{matchCode,jdbcType=VARCHAR},
		match_name =
		#{matchName,jdbcType=VARCHAR},
		field_code =
		#{fieldCode,jdbcType=VARCHAR},
		field_name =
		#{fieldName,jdbcType=VARCHAR},
		match_group_code =
		#{matchGroupCode,jdbcType=VARCHAR},
		match_group_name =
		#{matchGroupName,jdbcType=VARCHAR},
		event_code =
		#{eventCode,jdbcType=VARCHAR},
		event_name =
		#{eventName,jdbcType=VARCHAR},
		part_time =
		#{partTime,jdbcType=TIMESTAMP},
		score_name =
		#{scoreName,jdbcType=VARCHAR},
		score = #{score,jdbcType=DECIMAL},
		score_unit = #{scoreUnit,jdbcType=VARCHAR},
		score_desc =
		#{scoreDesc,jdbcType=VARCHAR},
		is_valid = #{isValid,jdbcType=TINYINT},
		score_type = #{scoreType,jdbcType=VARCHAR},
		score_prop =
		#{scoreProp,jdbcType=VARCHAR},
		player_prop =
		#{playerProp,jdbcType=VARCHAR},
		channel_code =
		#{channelCode,jdbcType=VARCHAR},
		idempotent_id =
		#{idempotentId,jdbcType=VARCHAR},
		source = #{source,jdbcType=TINYINT},
		sync = #{sync,jdbcType=TINYINT},
		sync_total =
		#{syncTotal,jdbcType=INTEGER},
		sync_status =
		#{syncStatus,jdbcType=VARCHAR},
		next_sync_time =
		#{nextSyncTime,jdbcType=TIMESTAMP},
		enroll_source =
		#{enrollSource,jdbcType=INTEGER},
		gmt_modified = now()
		where id =
		#{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from open_score
		where id = #{id,jdbcType=BIGINT}
	</select>
	<!--自定义查询 -->
	<!--* unitCode * matchCode * eventCode * playerCode * scoreName * start -->
	<select id="selectByProp" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			<if test="unitCode != null and unitCode !=''">
				and unit_code = #{unitCode,jdbcType=VARCHAR}
			</if>
			<if test="matchCode != null and matchCode != '' ">
				and match_code = #{matchCode,jdbcType=VARCHAR}
			</if>
			<if test="eventCode != null and eventCode !='' ">
				and event_code = #{eventCode,jdbcType=VARCHAR}
			</if>
			<if test="playerCode != null and playerCode !='' ">
				and player_code = #{playerCode,jdbcType=VARCHAR}
			</if>
			<if test="scoreName != null and scoreName !='' ">
				and score_name = #{scoreName,jdbcType=VARCHAR}
			</if>
			<if test="playerPhone != null and playerPhone != ''">
				and player_phone = #{playerPhone,jdbcType=VARCHAR}
			</if>
		</where>
		order by id asc
		limit #{start} , #{limit}
	</select>

	<select id="getScoreInfoByIdempotent" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			unit_code = #{unitCode,jdbcType=VARCHAR}
			and idempotent_id =
			#{idempotentId,jdbcType=VARCHAR}
		</where>
	</select>

	<!--自定义查询 -->
	<select id="selectPageLikeParams" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			1=1
			<if test="unitCode != null and unitCode !=''">
				and (unit_code = #{unitCode,jdbcType=VARCHAR} )
			</if>
			<if test="match != null and match != '' ">
				and (match_code like CONCAT('%',#{match},'%') or
				match_name like
				CONCAT('%',#{match},'%') )
			</if>
			<if test="playerName != null and playerName !='' ">
				and (player_name like CONCAT('%',#{playerName},'%') )
			</if>
			<if test="playerPhone != null and playerPhone !='' ">
				and (player_phone like CONCAT('%',#{playerPhone},'%') )
			</if>
			<if test="valid != null and valid !='' ">
				and (is_valid =#{valid} )
			</if>
			<if test="channelCode != null and channelCode !='' ">
				and (channel_code =#{channelCode} )
			</if>
			<if test="startTime != null and startTime !='' ">
				and (<![CDATA[gmt_create > #{startTime}]]>
				)
			</if>
			<if test="endTime != null and endTime !='' ">
				and (<![CDATA[gmt_create < #{endTime}]]>
				)
			</if>
		</where>
		<if test="sortField != null and sortField !='' ">
			<if test="sortField =='score' ">
				order by score
			</if>
			<if test="sortField =='partTime' ">
				order by part_time
			</if>
			<if test="sortField =='gmtCreate' ">
				order by gmt_create
			</if>
		</if>
		<if test="sortOrder =='desc' ">
			desc
		</if>
		<if test="sortOrder =='asc' ">
			asc
		</if>
	</select>



	<select id="queryByPlayerPhoneAndEventCode" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			<if test="playerPhone != null and playerPhone !='' ">
				and player_phone= #{playerPhone}
			</if>
			<if test="eventCode != null and eventCode !='' ">
				and event_code =#{eventCode}
			</if>
			order by part_time desc limit 0,100
		</where>
	</select>

	<!--查询未同步记录， sync=3不同步，为出错记录 。 同步记录到证书功能 -->
	<select id="selectUnSyncRecord" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			( sync is null or sync = 0) and (next_sync_time is null or
			next_sync_time &lt;= now())
		</where>
		order by id asc
		limit #{start} , #{limit}
	</select>

	<!-- <select id="getScoreOrderByScoreDesc" parameterType="map" resultMap="BaseResultMap"> 
		select <include refid="Base_Column_List" /> from open_score <where> ( sync 
		is null or sync = 0) and (next_sync_time is null or next_sync_time &lt;= 
		now()) </where> order by id asc limit #{start} , #{limit} </select> -->

	<select id="getScoreOrderByScoreAsc" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			<if test="matchCode != null and matchCode != '' ">
				and match_code=#{matchCode}
			</if>
			<if test="playerPhone != null and playerPhone !='' ">
				and player_phone = #{playerPhone,jdbcType=VARCHAR}
			</if>
			<if test="null != groups and groups.size > 0">
				and match_group_code in
				<foreach collection="groups" item="groupCode" open="("
					separator="," close=")">
					#{groupCode}
				</foreach>
			</if>
			<if test="null != events and events.size > 0">
				and event_code in
				<foreach collection="events" item="eventCode" open="("
					separator="," close=")">
					#{eventCode}
				</foreach>
			</if>
			<if test="null !=areas  and areas.size > 0">
				and field_code in
				<foreach collection="areas" item="fileCode" open="("
					separator="," close=")">
					#{fileCode}
				</foreach>
			</if>
			and is_valid=1
		</where>
		order by score asc 
		limit 0,1
	</select>


	<select id="getScoreOrderByScoreDesc" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			<if test="matchCode != null and matchCode != '' ">
				and match_code=#{matchCode}
			</if>
			<if test="playerPhone != null and playerPhone !='' ">
				and player_phone = #{playerPhone,jdbcType=VARCHAR}
			</if>
			<if test="null != groups and groups.size > 0">
				and match_group_code in
				<foreach collection="groups" item="groupCode" open="("
					separator="," close=")">
					#{groupCode}
				</foreach>
			</if>
			<if test="null != events and events.size > 0">
				and event_code in
				<foreach collection="events" item="eventCode" open="("
					separator="," close=")">
					#{eventCode}
				</foreach>
			</if>
			<if test="null !=areas  and areas.size > 0">
				and field_code in
				<foreach collection="areas" item="fileCode" open="("
					separator="," close=")">
					#{fileCode}
				</foreach>
			</if>
			and is_valid=1
		</where>
		order by score desc limit 0,1
	</select>


	<select id="queryScores" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			<if test="matchCode != null and matchCode != '' ">
				and match_code=#{matchCode}
			</if>
			<if test="playerPhone != null and playerPhone !='' ">
				and player_phone = #{playerPhone,jdbcType=VARCHAR}
			</if>
			<if test="null != groups and groups.size > 0">
				and match_group_code in
				<foreach collection="groups" item="groupCode" open="("
					separator="," close=")">
					#{groupCode}
				</foreach>
			</if>
			<if test="null != events and events.size > 0">
				and event_code in
				<foreach collection="events" item="eventCode" open="("
					separator="," close=")">
					#{eventCode}
				</foreach>
			</if>
			<if test="null !=areas  and areas.size > 0">
				and field_code in
				<foreach collection="areas" item="fileCode" open="("
					separator="," close=")">
					#{fileCode}
				</foreach>
			</if>
			and is_valid=1
		</where>
		limit 0, 2000
	</select>

	<select id="queryCompetitionScores" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			match_code=#{matchCode}
			<if test="playerPhone != null and playerPhone !='' ">
				and player_phone = #{playerPhone,jdbcType=VARCHAR}
			</if>
			<if test="null != groups and groups.size > 0">
				and match_group_code in
				<foreach collection="groups" item="groupCode" open="("
					separator="," close=")">
					#{groupCode}
				</foreach>
			</if>
			<if test="null != events and events.size > 0">
				and event_code in
				<foreach collection="events" item="eventCode" open="("
					separator="," close=")">
					#{eventCode}
				</foreach>
			</if>
			<if test="null !=areas  and areas.size > 0">
				and field_code in
				<foreach collection="areas" item="fileCode" open="("
					separator="," close=")">
					#{fileCode}
				</foreach>
			</if>
			and is_valid=1
		</where>
		limit #{start}, #{limit}
	</select>

	<select id="queryUnitScoreDate" resultType="String">
		select distinct
		DATE(part_time) as part_time from open_score ORDER BY
		part_time
	</select>
	
	<!-- 通过创建日期查询成绩记录  -->
	<select id="queryOpenScoreByDateForCert" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
			(sync = 0 or sync is null)
			and ( next_sync_time is null or next_sync_time &lt; now() )
			<if test="startTime != null">
				and <![CDATA[gmt_create >= #{startTime}]]>
 			</if>
			<if test="endTime != null">
				and <![CDATA[gmt_create < #{endTime}]]>
 			</if>
			and is_valid=1
		</where>
		order by id asc
		limit #{start}, #{limit}
	</select>
	
	<!-- delete -->
	<select id="queryUnitScoreCount" parameterType="map"
		resultType="java.util.HashMap">
		SELECT a.part_time,a.unit_code, b.unit_name,count(*) AS counts from
		open_score a, open_unit_account b where a.unit_code = b.unit_code and
		a.unit_code is not null and a.unit_code != ''
		<if test="partTime != null and partTime != ''">
			and a.part_time &gt;= #{partTime,jdbcType=VARCHAR}
		</if>
		GROUP BY a.unit_code order by part_time desc;
	</select>

	<!-- delete -->
	<select id="queryMatchScoreCount" parameterType="map"
		resultType="java.util.HashMap">
		SELECT a.match_code,a.match_name,a.part_time,a.unit_code,
		b.unit_name,count(*) AS counts from open_score a, open_unit_account b
		where a.unit_code = b.unit_code and a.unit_code is not null and
		a.unit_code != ''
		<if test="partTime &gt;= null and partTime != ''">
			and a.part_time &gt;= #{partTime,jdbcType=VARCHAR}
		</if>
		<if test="source != null">
			and a.source = #{source,jdbcType=TINYINT}
		</if>
		<if test="organizer != null">
			and a.source != 1
		</if>
		GROUP BY a.match_code order by part_time desc;
	</select>

	
	  <select id="queryUnitScoreDate" resultType="String">
      select distinct DATE(part_time) as part_time from open_score ORDER BY part_time
  </select>
  
  <select  id="queryUnitScoreByCount" parameterType="map" resultType="java.util.HashMap">

      SELECT a.part_time,a.unit_code,count(*) AS counts from open_score a,open_unit_account b where a.unit_code = b.unit_code and a.unit_code is not null and a.unit_code != ''   

      <if test="partTime != null and partTime != ''">
	      and DATE(a.part_time) = #{partTime,jdbcType=VARCHAR} 
      </if>
      GROUP BY a.unit_code; 
  </select>
  
  <select  id="queryMatchScoreByCount" parameterType="map" resultType="java.util.HashMap">

      SELECT a.match_code,a.match_name,a.part_time,a.unit_code,count(*) AS counts,a.enroll_source from open_score a,open_unit_account b where a.unit_code = b.unit_code and a.unit_code is not null and a.unit_code != ''

      <if test="partTime != null and partTime != ''">
	      and DATE(a.part_time) = #{partTime,jdbcType=VARCHAR} 
      </if>
      GROUP BY a.match_code,a.enroll_source order by part_time desc;  
  </select>
	
   <select  id="queryUnComputeEventCodeByMap" parameterType="map" resultType="String">
      select distinct event_code from open_score where enroll_source is null 
      limit #{start}, #{limit}
   </select>
   
   <select id="queryUnMatchRecordByMap" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from open_score
		<where>
 		    event_code=#{eventCode}
 		    and enroll_source is null
		</where>
		limit #{start}, #{limit}
	</select>
 
</mapper>